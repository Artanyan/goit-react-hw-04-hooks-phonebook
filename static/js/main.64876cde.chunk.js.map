{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","props","useState","stateName","setStateName","stateNumber","setStateNumber","handleChange","e","target","name","value","reset","className","styles","contactForm","onSubmit","preventDefault","contacts","find","contact","alert","number","type","onChange","ContactsList","onDelete","map","onClick","id","SearchContacts","App","JSON","parse","window","localStorage","getItem","stateContacts","setStateContacts","stateFilter","setStateFilter","useEffect","setItem","stringify","data","shortid","generate","prevState","normalizedFilter","toLowerCase","filter","includes","getFilteredContacts","contactId","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQA6EeA,EAzEK,SAAAC,GAClB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,OACHN,EAAaO,GACb,MAEF,IAAK,SACHL,EAAeK,KAsBfC,EAAQ,WACZR,EAAa,IACbE,EAAe,KAGjB,OACE,uBAAMO,UAAWC,IAAOC,YAAaC,SApBlB,SAAAR,GAEnB,GADAA,EAAES,iBAEAhB,EAAMiB,UACNjB,EAAMiB,SAASC,MAAK,SAAAC,GAAO,OAAIA,EAAQV,OAASP,KAEhD,OAAOkB,MAAMlB,EAAY,2BAI3BF,EAAMe,SAAS,CAAEN,KAAMP,EAAWmB,OAAQjB,IAC1CO,KASA,UACE,yCAEE,uBACAC,UAAU,QACRH,KAAK,OACLa,KAAK,OACLZ,MAAOR,EACPqB,SAAUjB,OAId,2CAEE,uBACAM,UAAU,QACRH,KAAK,SACLa,KAAK,OACLZ,MAAON,EACPmB,SAAUjB,OAId,wBAAQM,UAAU,MAAMU,KAAK,SAA7B,6BC5CSE,EApBM,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAUQ,EAAe,EAAfA,SAChC,OACE,oBAAIb,UAAY,OAAhB,SACGK,EAASS,KAAI,SAAAP,GAAO,OACnB,qBAAIP,UAAY,YAAhB,UACGO,EAAQV,KACR,KACAU,EAAQE,OACT,wBAAQM,QAAS,kBAAMF,EAASN,EAAQS,KAAxC,sBAJ+BT,EAAQS,UCUlCC,EAdQ,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SAC/B,OACE,0DAEE,uBAAOX,UAAU,QAAQH,KAAK,SAASa,KAAK,OAAOZ,MAAOA,EAAOa,SAAUA,Q,gBCuDlEO,EAxDH,WAAO,IAAD,EAChB,EAA0C7B,mBAAQ,UAChD8B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADS,QACO,IADzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAGA,EAAsCpC,mBAAS,IAA/C,mBAAOqC,EAAP,KAAoBC,EAApB,KAGAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUN,MACtD,CAACA,IA+BJ,OACE,qCACE,2CACA,cAAC,EAAD,CAAarB,SA9BS,SAAA4B,GACxBA,EAAKf,GAAKgB,IAAQC,WAClBR,GAAiB,SAAAS,GAAS,4BAAQA,GAAR,CAAmBH,QA4BD1B,SAAUmB,IACpD,0CACA,cAAC,EAAD,CAAgB1B,MAAO4B,EAAaf,SA1BnB,SAAAhB,GACnBgC,GAAe,kBAAMhC,EAAEC,OAAOE,YA0B3B0B,GACC,cAAC,EAAD,CACEnB,SAxBoB,WAC1B,GAAImB,EAAe,CACjB,IAAMW,EAAmBT,EAAYU,cACrC,OAAOZ,EAAca,QAAO,SAAA9B,GAAO,OACjCA,EAAQV,KAAKuC,cAAcE,SAASH,OAoBxBI,GACV1B,SAhBc,SAAA2B,GACpB,IAAMC,EAAmBjB,EAAca,QACrC,SAAA9B,GAAO,OAAIA,EAAQS,KAAOwB,KAE5Bf,EAAiBgB,U,YCpCrBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,YAAc,oC","file":"static/js/main.64876cde.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = props => {\n  const [stateName, setStateName] = useState('');\n  const [stateNumber, setStateNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setStateName(value);\n        break;\n\n      case 'number':\n        setStateNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      props.contacts &&\n      props.contacts.find(contact => contact.name === stateName)\n    ) {\n      return alert(stateName + ' is already in contacts');\n    }\n\n    //При сабміті форми передає дані в formSubmitHandler(onSubmit), яка в пропсах\n    props.onSubmit({ name: stateName, number: stateNumber });\n    reset();\n  };\n\n  const reset = () => {\n    setStateName('');\n    setStateNumber('');\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n        className=\"input\"\n          name=\"name\"\n          type=\"text\"\n          value={stateName}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n        className=\"input\"\n          name=\"number\"\n          type=\"text\"\n          value={stateNumber}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className=\"btn\" type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n// import styles from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className = \"list\">\n      {contacts.map(contact => (\n        <li className = \"list-item\" key={contact.id}>\n          {contact.name}\n          {': '}\n          {contact.number}\n          <button onClick={() => onDelete(contact.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\n// import styles from './SearchContacts.module.css';\n\nconst SearchContacts = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input className=\"input\" name=\"filter\" type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nSearchContacts.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchContacts;\n","import { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport SearchContacts from './components/SearchContacts/SearchContacts';\nimport shortid from 'shortid';\n\nconst App = () => {\n  const [stateContacts, setStateContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? '',\n  );\n  const [stateFilter, setStateFilter] = useState('');\n\n  // Записує конткти в Local Storage з stateContacts при їх оновленні\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(stateContacts));\n  }, [stateContacts]);\n\n  //Записує в stateContacts дані з форми ContactForm\n  //прокидується як prop в ContactForm\n  const formSubmitHandler = data => {\n    data.id = shortid.generate();\n    setStateContacts(prevState => [...prevState, data]);\n  };\n\n  //Записує дані з фільтру в stateFilter\n  const changeFilter = e => {\n    setStateFilter(() => e.target.value);\n  };\n\n  //Повертає відфільтровані контакти (пошук)\n  const getFilteredContacts = () => {\n    if (stateContacts) {\n      const normalizedFilter = stateFilter.toLowerCase();\n      return stateContacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    }\n  };\n\n  const deleteContact = contactId => {\n    const filteredContacts = stateContacts.filter(\n      contact => contact.id !== contactId,\n    );\n    setStateContacts(filteredContacts);\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm onSubmit={formSubmitHandler} contacts={stateContacts} />\n      <h2>Contacts</h2>\n      <SearchContacts value={stateFilter} onChange={changeFilter} />\n      {stateContacts && (\n        <ContactsList\n          contacts={getFilteredContacts()}\n          onDelete={deleteContact}\n        ></ContactsList>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3E6vK\"};"],"sourceRoot":""}